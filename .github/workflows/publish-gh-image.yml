name: Create, Scan and Publish KAITO image
on:
  workflow_run:
    workflows: [ "Push image to ACR" ]
    types: [ completed ]

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  GO_VERSION: '1.20'
  IMAGE_NAME: 'workspace'

jobs:
  publish-images:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: preset-env
    outputs:
      tag: ${{ steps.get-registry.outputs.registry }}
    steps:
      - id: get-registry
        run: |
          # registry must be in lowercase
          echo " registry=$(echo "${{ env.REGISTRY }}/${{ github.repository }}" | tr [:upper:] [:lower:])" >> $GITHUB_OUTPUT

      - id: get-tag
        name: Get tag
        run: echo "release_tag=$(echo ${{ github.event.pull_request.head.ref }} | tr -d release-)" >> $GITHUB_OUTPUT

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          submodules: true
          fetch-depth: 0
          ref: ${{ steps.get-tag.outputs.release_tag }}

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Image tag
        run: |
          ver=${{ steps.get-tag.outputs.release_tag }}
          echo "IMG_TAG=${ver#"v"}" >> $GITHUB_ENV

      - name: Build image
        run: |
          OUTPUT_TYPE=type=registry make docker-build-kaito
        env:
          VERSION: ${{ steps.get-tag.outputs.release_tag }}

      - name: Scan ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMG_TAG }}
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMG_TAG }}
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          timeout: '5m0s'
        env:
          TRIVY_USERNAME: ${{ github.actor }}
          TRIVY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

  run-e2e-gh-image:
    needs: [publish-images]
    uses: ./.github/workflows/e2e-workflow.yml
    with:
      git_sha: ${{ github.sha }}
      isRelease: true
      registry: ${{ steps.get-registry.outputs.registry }}
      tag: ${{ steps.get-tag.outputs.release_tag }}
    secrets:
      E2E_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      E2E_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      E2E_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      E2E_AMRT_SECRET_NAME: ${{ secrets.AMRT_SECRET_NAME }}
      E2E_ACR_AMRT_USERNAME: ${{ secrets.ACR_AMRT_USERNAME }}
      E2E_ACR_AMRT_PASSWORD: ${{ secrets.ACR_AMRT_PASSWORD }}

  create-release:
    runs-on: ubuntu-latest
    environment: preset-env
    needs: [run-e2e-gh-image]
    steps:
      - name: 'Dispatch release tag'
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: create-release
          client-payload: '{"tag": "v${{ env.IMG_TAG }}"}'
