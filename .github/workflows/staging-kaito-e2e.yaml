name: staging-test

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

on:
#  workflow_dispatch:
#    inputs:
#      subscription_id:
#        description: 'Azure Subscription ID to run the e2e tests'
#        default:
#        required: true
  pull_request:

env:
  GO_VERSION: "1.20"

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  staging-test:
    runs-on: ubuntu-latest
    environment: e2e-test
    steps:
#      - name: validate version
#        run: |
#            echo "${{ github.event.inputs.subscription_id }}" | grep -E '^[0-9A-Fa-f]{8}-([0-9A-Fa-f]{4}-){3}[0-9A-Fa-f]{12}$'
      - name: Set up Go ${{ env.GO_VERSION }}
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION  }}

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Shorten SHA
        id: vars
        run: echo "pr_sha_short=$(git rev-parse --short ${{ github.event.pull_request.head.sha }})" >> $GITHUB_OUTPUT

      - name: Set e2e Resource and Cluster Name
        run: |
          rand=${{ steps.vars.outputs.pr_sha_short }}

          if [ "$rand" = "" ]; then
             rand=$RANDOM
          fi

          echo "VERSION=${rand}" >> $GITHUB_ENV
          echo "CLUSTER_NAME=kaito${rand}" >> $GITHUB_ENV
          echo "RUN_LLAMA_13B=false" >> $GITHUB_ENV
          echo "AI_MODELS_IMAGE_VERSION=0.0.1" >> $GITHUB_ENV 

      - uses: azure/login@v1.6.1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}

      - name: Create Role Assignment
        uses: azure/CLI@v1.0.9
        with:
          inlineScript: |
            az account set -s "26fe00f8-9173-4872-9134-bb1d2e00343a"

      - name: create cluster
        shell: bash
        run: |
          make create-rg
          make create-aks-cluster-with-kaito
          echo "MC_RG="MC_${{ env.CLUSTER_NAME }}_${{ env.CLUSTER_NAME }}_westus2" >> $GITHUB_ENV
        env:
          AZURE_ACR_NAME: ${{ env.CLUSTER_NAME }}
          AZURE_RESOURCE_GROUP: ${{ env.CLUSTER_NAME }}
          AZURE_CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          AZURE_LOCATION: "westus2"

      - name: Create Role Assignment
        uses: azure/CLI@v1.0.9
        with:
          inlineScript: |
            IDENTITY_PRINCIPAL_ID="$(az identity show --name ai-toolchain-${{ env.CLUSTER_NAME }} --resource-group ${{ env.MC_RG }} --query 'principalId' -otsv)"
            az role assignment create --assignee ${IDENTITY_PRINCIPAL_ID} --scope "/subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/${{ env.MC_RG }}"  --role "Contributor"

      - name: Create Azure Federated Identity
        uses: azure/CLI@v1.0.9
        with:
          inlineScript: |
            AKS_OIDC_ISSUER="$(az aks show -n "${{ env.CLUSTER_NAME }}" -g "${{ env.CLUSTER_NAME }}" --query 'oidcIssuerProfile.issuerUrl' -otsv)"
            az identity federated-credential create --name kaito-federated-cred --identity-name ai-toolchain-${{ env.CLUSTER_NAME }} --resource-group "${{ env.CLUSTER_NAME }}" \
            --issuer "${AKS_OIDC_ISSUER}" --subject system:serviceaccount:"kube-system:kaito-gpu-provisioner" --audience api://AzureADTokenExchange

      - name: Login to Private Presets ACR
        uses: azure/CLI@v1.0.9
        with:
          inlineScript: |
            az acr login --name ${{secrets.DOCKER_SERVER}}
            az aks update -n ${{ env.CLUSTER_NAME }} -g ${{ env.CLUSTER_NAME }} --attach-acr ${{secrets.ACR_AIMODELSREGISTRY}}

      - name: Add Secret Credentials
        run: |
          kubectl create secret docker-registry ${{secrets.DOCKER_REGISTRY}} \
          --docker-server=${{secrets.DOCKER_SERVER}} \
          --docker-username=${{secrets.DOCKER_USERNAME}} \
          --docker-password=${{secrets.DOCKER_PASSWORD}}
      
      - name: Log kaito-workspace
        run: |
          kubectl get pods -n kaito-workspace -o name | grep "^pod/kaito-workspace" | sed 's/^pod\///' | xargs -I {} kubectl logs -n kaito-workspace {}

      - name: Run e2e test
        run: |
          make kaito-workspace-e2e-test
        env:
          AZURE_CLUSTER_NAME: ${{ env.CLUSTER_NAME }}
          RUN_LLAMA_13B: ${{ env.RUN_LLAMA_13B }}
          AI_MODELS_REGISTRY: ${{secrets.DOCKER_SERVER}}
          AI_MODELS_REGISTRY_SECRET: ${{ secrets.DOCKER_REGISTRY }}
          AI_MODELS_IMAGE_VERSION: ${{ env.AI_MODELS_IMAGE_VERSION }}

      - name: Cleanup e2e resources
        if: ${{ always() }}
        uses: azure/CLI@v1.0.9
        with:
          inlineScript: |
            set +e
            az group delete --name "${{ env.CLUSTER_NAME }}" --yes --no-wait || true
