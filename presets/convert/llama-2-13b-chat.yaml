apiVersion: apps/v1
kind: Deployment
metadata:
  name: llama-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: llama
  template:
    metadata:
      labels:
        app: llama
    spec:
      containers:
      - command:
        - /bin/sh
        - -c
        - cd /workspace/llama/llama-2-13b-chat && torchrun --nproc_per_node=2 web_example_chat_completion.py
        name: llama-container
        image: aimodelsregistry.azurecr.io/llama-2-13b-chat:latest
        resources:
          limits:
            nvidia.com/gpu: 2
          requests:
            nvidia.com/gpu: 2
        volumeMounts:
        - name: dshm
          mountPath: /dev/shm
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 60
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5000
          initialDelaySeconds: 30
          periodSeconds: 10
      # nodeSelector:
      #   kubernetes.io/hostname: gpu_machine_here
      tolerations:
      - effect: NoSchedule
        key: sku
        operator: Equal
        value: gpu
      - effect: NoSchedule
        key: nvidia.com/gpu
        operator: Exists
      volumes:
      - name: dshm
        emptyDir:
          medium: Memory
---

apiVersion: v1
kind: Service
metadata:
  name: llama-service
spec:
  selector:
    app: llama
  ports:
  - protocol: TCP
    port: 80
    targetPort: 5000
  type: LoadBalancer
  